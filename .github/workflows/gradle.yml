# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Sanitize the bot's token
        run: sed -i "s/BotConstant.BOT_TOKEN_STRING/args[0]/" src/com/deliburd/bot/burdbot/Main.java
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Rename the jar
        run: mv build/libs/$(ls -1 build/libs | grep all\.jar) build/libs/$(ls -1 build/libs | grep all\.jar | sed 's/.*\(-all.jar\)/GITHUB_SHA\1/')
      - name: Upload jar to VPS
        env:
          USRNAME: ${{ secrets.SFTP_USERNAME }}
          HOST: ${{ secrets.SFTP_HOST }}
          PWD: ${{ secrets.SFTP_PWD }}
          PORT: ${{ secrets.SFTP_PORT }}
        run: |
          sftp -oPort=$PORT "$USRNAME@$HOST"
          yes
          $PWD
          put $GITHUB_SHA-all.jar
          bye
      - name: Restart BurdBot
        env:
          ID: ${{ secrets.SERVER_ID }}
          API_KEY: ${{ secrets.PTERODACTYL_API_KEY }}
        run: |
          curl "https://gamepanel.eggzr.com/api/client/servers/$ID/power" -H "Authorization: Bearer $API_KEY" -H "Content-Type: application/json" -H "Accept: Application/vnd.pterodactyl.v1+json" -X POST -d '{ "signal": "restart" }'
